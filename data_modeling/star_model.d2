vars: {

    d2-config: {
  
      layout-engine: elk
    }
  
  }

title: |md
  # STAR DATA FROM 3NF
| { near: top-center }


# l'ID de la compagnie et son nom
DST_3NF_AIRLINES: {
    shape: sql_table
    style: {fill: green}
    AIRLINEID: VARCHAR {constraint: [primary_key]}
    AIRLINENAME: VARCHAR
    AIRLINEID_ICAO: VARCHAR
}

# Le code de l'avion, le modèle
# pas d'infos sur AIRLINEEQUIPCODE à part le code
DST_3NF_AIRCRAFTS: {
    shape: sql_table
    style: {fill: green}
    AIRCRAFTCODE: VARCHAR  {constraint: [primary_key]}
#    AIRLINEEQUIPCODE: VARCHAR
    AICRAFTNAME: VARCHAR
}

# Le code de l'aéroport, locationtype (rail, airport, ...) sans plus d'info, le nom de l'aéroport, sa latitude et longitude
DST_3NF_AIRPORTS: {
    shape: sql_table
    style: {fill: green}
    AIRPORTCODE: VARCHAR {constraint: [primary_key]}
    CITYCODE: VARCHAR
    CITYNAME: VARCHAR
    TIMEZONEID: VARCHAR
    UTCOFFSET: VARCHAR
    COUNTRYCODE: VARCHAR
    COUNTRYNAME: VARCHAR
    LOCATIONTYPE: VARCHAR
    AIRPORTNAME: VARCHAR
    LATITUDE: VARCHAR
    LONGITUDE: VARCHAR
}

# Un vol
# FLIGHTID: généré à partir de airlineid + FLIGHTNUMBER + DEPARTUREDATETIMEUTC
# FLIGHTID	FLIGHTNUMBER	SERVICETYPECODE	AIRCRAFTCODE	AIRCRAFTOWNER	DEPARTUREAIRPORTCODE	DEPARTUREDATETIMEUTC	DEPARTURETIMESTATUSCODE	ARRIVALAIRPORTCODE	ARRIVALESTIMATEDDATETIMEUTC	ARRIVALTIMESTATUSCODE	ARRIVALDATETIMEUTC	OPERATINGCARRIERAIRLINEID	OPERATINGCARRIERFLIGHTNUMBER	MARKETINGCARRIERAIRLINEID	MARKETINGCARRIERFLIGHTNUMBER
# WK62024-02-15 13:05:00.000	6	J	343	WK	ZRH	2024-02-15 13:05:00.000 +0000	DL	POP	2024-02-15 23:52:00.000 +0000	DL	2024-02-15 23:10:00.000 +0000	WK	006	WK	6
DST_3NF_FLIGHTS: {
    shape: sql_table
    style: {fill: green}
    FLIGHTID:  {constraint: [primary_key]}
    FLIGHTNUMBER: NUMBER
    SERVICETYPECODE: VARCHAR {constraint: foreign_key}
    AIRCRAFTCODE: VARCHAR {constraint: foreign_key}
    DEPARTUREAIRPORTCODE: VARCHAR {constraint: foreign_key}
    DEPARTURETIMESTATUSCODE: VARCHAR {constraint: foreign_key}
    # DEPARTURETERMINALGATE: VARCHAR {constraint: foreign_key}
    DEPARTUREDATETIMEUTC: DATETIME
    # ARRIVALTERMINALGATE: VARCHAR {constraint: foreign_key}
    ARRIVALTIMESTATUSCODE: VARCHAR {constraint: foreign_key}
    ARRIVALAIRPORTCODE: VARCHAR
    ARRIVALDATETIMEUTC: DATETIME
    ARRIVALESTIMAEDDATETIMEUTC: DATETIME
    # CONFIGURATIONVERSION: VARCHAR
    AIRCRAFTOWNER: VARCHAR {constraint: foreign_key}
    OPERATINGCARRIERAIRLINEID: VARCHAR {constraint: foreign_key}
    OPERATINGCARRIERFLIGHTNUMBER: NUMBER
    MARKETINGCARRIERAIRLINEID: VARCHAR {constraint: foreign_key}
    MARKETINGCARRIERFLIGHTNUMBER: NUMBER
}

# Code du type de service, description du service, application du service, contenu du service
# ex: 'J', 'Normal Service', 'Scheduled', 'Passenger'
DST_3NF_SERVICE_TYPE {
    shape: sql_table
    style: {fill: green}
    SERVICETYPECODE: VARCHAR {constraint: [primary_key]}
    SERVICETYPEDESC: VARCHAR
    SERVICETYPEAPP: VARCHAR
    SERVICETYPECONTENT: VARCHAR
}

# exemple: ('CD', 'Flight Cancelled')
DST_3NF_TIME_STATUS {
    shape: sql_table
    style: {fill: green}
    TIMESTATUSCODE: VARCHAR {constraint: [primary_key]}
    TIMESTATUSDEFINITION: VARCHAR
}



# DST_3NF_SERVICE.SERVICETYPEID -> DST_3NF_FLIGHTS.SERVICETYPEID
DST_3NF_FLIGHTS.ARRIVALTIMESTATUSCODE -> DST_3NF_TIME_STATUS.TIMESTATUSCODE <- DST_3NF_FLIGHTS.ARRIVALTIMESTATUSCODE: 1,n
# DST_3NF_FLIGHTS.DEPARTURETERMINALGATE <- DST_3NF_GATES.TERMINALID -> DST_3NF_FLIGHTS.ARRIVALETERMINALGATE
# DST_3NF_DATE.DATEUTC -> DST_3NF_FLIGHTS.DEPARTUREDATETIMEUTC
DST_3NF_AIRPORTS.AIRPORTCODE <- DST_3NF_FLIGHTS.DEPARTUREAIRPORTCODE: 1,n
DST_3NF_AIRPORTS.AIRPORTCODE <- DST_3NF_FLIGHTS.ARRIVALAIRPORTCODE: 1,n
DST_3NF_AIRLINES.AIRLINEID <- DST_3NF_FLIGHTS.OPERATINGCARRIERAIRLINEID: 1,n
DST_3NF_AIRLINES.AIRLINEID <- DST_3NF_FLIGHTS.MARKETINGCARRIERAIRLINEID: 1,n
DST_3NF_AIRCRAFTS.AIRCRAFTCODE <- DST_3NF_FLIGHTS.AIRCRAFTCODE: 1,n
DST_3NF_SERVICE_TYPE.SERVICETYPECODE <- DST_3NF_FLIGHTS.SERVICETYPECODE: 1,n

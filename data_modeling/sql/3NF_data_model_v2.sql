USE DATABASE DB_SL_EP_LAB;

USE SCHEMA DST;
USE WAREHOUSE WH_LAB_ENG;

/**********************************************************************************************/
/****************************************TABLE DEFINITION**************************************/
/**********************************************************************************************/

/***************AIRCRAFTS****************/
CREATE OR REPLACE TABLE DST_3NF_AIRCRAFTS (
    AIRCRAFTCODE VARCHAR PRIMARY KEY, 
    AIRLINEEQUIPCODE VARCHAR, 
    NAME VARCHAR
)

/***************AIRLINES************/
CREATE OR REPLACE TABLE DST_3NF_AIRLINES (
    AIRLINEID VARCHAR PRIMARY KEY,
    NAME VARCHAR,
    AIRLINE_ICAO VARCHAR
)

/****************AIRPORTS***************/
CREATE OR REPLACE TABLE DST_3NF_LOCATIONTYPE (
    ID_LOCATIONTYPE NUMBER IDENTITY PRIMARY KEY,
    LOCATIONTYPE VARCHAR
)
CREATE OR REPLACE TABLE DST_3NF_AIRPORTS (
    AIRPORTCODE VARCHAR PRIMARY KEY,
    CITYCODE VARCHAR,
    COUNTRYCODE VARCHAR,
    NAME VARCHAR,
    LATITUDE NUMBER,
    LONGITUDE NUMBER,
    LOCATIONTYPE VARCHAR
)

/***********CITIES**********/
CREATE OR REPLACE TABLE DST_3NF_CITIES (
    ID_CITYCODE NUMBER IDENTITY PRIMARY KEY,
    CITYCODE VARCHAR,
    NAME VARCHAR,
    AIRPORTCODE VARCHAR,
    COUNTRYCODE VARCHAR
)

/*******************COUNTRIES******************/
CREATE OR REPLACE TABLE DST_3NF_COUNTRIES (
    COUNTRYCODE VARCHAR PRIMARY KEY,
    COUNTRYNAME VARCHAR
)

/****************FLIGHT_SCHEDULES*****************/
CREATE OR REPLACE TABLE DST_3NF_SERVICETYPE (
    ID_SERVICETYPE NUMBER IDENTITY PRIMARY KEY,
    SERVICETYPE VARCHAR
)

CREATE OR REPLACE TABLE DST_3NF_FLIGHT_SCHEDULES (
    ID_FLIGHT_SCHEDULES NUMBER IDENTITY PRIMARY KEY,
    FLIGHTNUMBER NUMBER,
    AIRLINEID VARCHAR,
    SERVICETYPE VARCHAR,
    AIRCRAFTTYPE VARCHAR,
    AIRCRAFTARRIVALTIMELT NUMBER,
    AIRCRAFTOWNER VARCHAR,
    DESTINATION VARCHAR,
    ORIGIN VARCHAR,
    DAYSOFOPERATION NUMBER,
    ENDATE VARCHAR,
    STARTDATE VARCHAR
)



/****************************************************************************************/
/**************************************DATA INGESTION************************************/
/****************************************************************************************/

/***************AIRCRAFTS****************/
MERGE INTO DST_3NF_AIRCRAFTS AS TGT
USING DST_AIRCRAFTS AS SRC
ON (TGT.AIRCRAFTCODE = SRC.AIRCRAFTCODE)
WHEN MATCHED THEN
    UPDATE SET
    TGT.AIRLINEEQUIPCODE = SRC.AIRLINEEQUIPCODE,
    TGT.NAME = SRC.NAME
WHEN NOT MATCHED THEN
    INSERT VALUES(SRC.AIRCRAFTCODE, SRC.AIRLINEEQUIPCODE, SRC.NAME)

/***************AIRLINES************/
MERGE INTO DST_3NF_AIRLINES AS TGT
USING (SELECT DISTINCT AIRLINEID, NAME, AIRLINE_ICAO FROM DST_AIRLINES WHERE AIRLINEID IS NOT NULL AND NAME IS NOT NULL AND AIRLINE_ICAO IS NOT NULL) AS SRC
ON (SRC.AIRLINEID = TGT.AIRLINEID AND SRC.NAME = TGT.NAME AND SRC.AIRLINE_ICAO = TGT.AIRLINE_ICAO)
WHEN MATCHED THEN
    UPDATE SET
    TGT.NAME = SRC.NAME,
    TGT.AIRLINE_ICAO = SRC.AIRLINE_ICAO
WHEN NOT MATCHED THEN
    INSERT VALUES(SRC.AIRLINEID, SRC.NAME, SRC.AIRLINE_ICAO)

/****************AIRPORTS***************/
INSERT INTO DST_3NF_LOCATIONTYPE(LOCATIONTYPE) SELECT DISTINCT LOCATIONTYPE FROM DST_AIRPORTS WHERE LOCATIONTYPE NOT IN (SELECT LOCATIONTYPE FROM DST_3NF_LOCATIONTYPE)

MERGE INTO DST_3NF_AIRPORTS AS TGT
USING (
    SELECT DISTINCT 
        A.AIRPORTCODE,
        A.CITYCODE,
        A.COUNTRYCODE,
        A.NAME, 
        A.LATITUDE, 
        A.LONGITUDE,
        B.ID_LOCATIONTYPE
    FROM 
        DST_AIRPORTS A
    INNER JOIN
        DST_3NF_LOCATIONTYPE B ON A.LOCATIONTYPE = B.LOCATIONTYPE
    WHERE 
        A.NAME IS NOT NULL) AS SRC
ON (TGT.AIRPORTCODE = SRC.AIRPORTCODE)
WHEN MATCHED THEN
UPDATE SET
    TGT.NAME = SRC.NAME,
    TGT.CITYCODE = SRC.CITYCODE,
    TGT.COUNTRYCODE = SRC.COUNTRYCODE,
    TGT.LATITUDE = SRC.LATITUDE,
    TGT.LONGITUDE = SRC.LONGITUDE,
    TGT.LOCATIONTYPE = SRC.ID_LOCATIONTYPE
WHEN NOT MATCHED THEN
    INSERT(TGT.AIRPORTCODE, TGT.NAME, TGT.CITYCODE, TGT.COUNTRYCODE, TGT.LATITUDE, TGT.LONGITUDE, TGT.LOCATIONTYPE) VALUES(SRC.AIRPORTCODE, SRC.NAME, SRC.CITYCODE, SRC.COUNTRYCODE, SRC.LATITUDE, SRC.LONGITUDE, SRC.ID_LOCATIONTYPE)

/***********CITIES**********/
-- WITH CTE AS (
-- select distinct
--     t.value::String as AirportCode,
--     r.CityCode as CityCode,
--     r.CountryCode as CountryCode,
--     r.Name as Name,
--     r.LanguageCode as LanguageCode,
--     r.TimeZoneId as TimeZoneId,
--     r.UtcOffset as UtcOffset
-- from
--     dst_cities r,
--     lateral flatten (INPUT => r.airportcode) t
-- )

MERGE INTO DST_3NF_CITIES AS TGT
USING (
    select distinct
        t.value::String as AirportCode,
        r.CityCode as CityCode,
        r.CountryCode as CountryCode,
        r.Name as Name,
        r.LanguageCode as LanguageCode,
        r.TimeZoneId as TimeZoneId,
        r.UtcOffset as UtcOffset
    from
        dst_cities r,
        lateral flatten (INPUT => r.airportcode) t
) AS SRC
ON (SRC.CITYCODE = TGT.CITYCODE AND SRC.AIRPORTCODE = TGT.AIRPORTCODE)
WHEN MATCHED THEN
UPDATE SET
    TGT.NAME = SRC.NAME,
    TGT.AIRPORTCODE = SRC.AIRPORTCODE,
    TGT.COUNTRYCODE = SRC.COUNTRYCODE
WHEN NOT MATCHED THEN
    INSERT(TGT.CITYCODE, TGT.NAME, TGT.AIRPORTCODE, TGT.COUNTRYCODE) VALUES(SRC.CITYCODE, SRC.NAME, SRC.AIRPORTCODE, SRC.COUNTRYCODE)

/*******************COUNTRIES******************/
MERGE INTO DST_3NF_COUNTRIES AS TGT
USING (SELECT DISTINCT COUNTRYCODE, COUNTRYNAME FROM DST_COUNTRIES) AS SRC
ON (SRC.COUNTRYCODE = TGT.COUNTRYCODE)
WHEN MATCHED THEN
UPDATE SET
    TGT.COUNTRYNAME = SRC.COUNTRYNAME
WHEN NOT MATCHED THEN
    INSERT(TGT.COUNTRYCODE, TGT.COUNTRYNAME) VALUES(SRC.COUNTRYCODE, SRC.COUNTRYNAME)


INSERT INTO DST_3NF_SERVICETYPE(SERVICETYPE) 
SELECT DISTINCT SERVICETYPE FROM DST_FLIGHT_SCHEDULES WHERE SERVICETYPE NOT IN (SELECT SERVICETYPE FROM DST_3NF_SERVICETYPE)

/****************FLIGHT_SCHEDULES*****************/
MERGE INTO DST_3NF_FLIGHT_SCHEDULES AS TGT
USING (
    SELECT DISTINCT
        A.FLIGHTNUMBER,
        A.AIRLINEID,
        B.ID_SERVICETYPE,
        A.AIRCRAFTTYPE,
        AIRCRAFTARRIVALTIMELT,
        A.AIRCRAFTOWNER,
        A.DESTINATION,
        A.ORIGIN,
        A.DAYSOFOPERATION,
        A.ENDATE,
        A.STARTDATE
    FROM
        DST_FLIGHT_SCHEDULES A
    INNER JOIN
        DST_3NF_SERVICETYPE B ON A.SERVICETYPE = B.SERVICETYPE
) AS SRC
ON (SRC.AIRLINEID = TGT.AIRLINEID AND SRC.STARTDATE = TGT.STARTDATE AND SRC.FLIGHTNUMBER = TGT.FLIGHTNUMBER)
WHEN MATCHED THEN
UPDATE SET
    TGT.SERVICETYPE = SRC.ID_SERVICETYPE,
    TGT.AIRCRAFTTYPE = SRC.AIRCRAFTTYPE,
    TGT.AIRCRAFTARRIVALTIMELT = SRC.AIRCRAFTARRIVALTIMELT,
    TGT.AIRCRAFTOWNER = SRC.AIRCRAFTOWNER,
    TGT.DESTINATION = SRC.DESTINATION,
    TGT.ORIGIN = SRC.ORIGIN,
    TGT.DAYSOFOPERATION = SRC.DAYSOFOPERATION,
    TGT.ENDATE = SRC.ENDATE
WHEN NOT MATCHED THEN
INSERT(TGT.FLIGHTNUMBER, TGT.AIRLINEID, TGT.AIRCRAFTTYPE, TGT.SERVICETYPE, TGT.AIRCRAFTARRIVALTIMELT, TGT.AIRCRAFTOWNER, TGT.DESTINATION, TGT.ORIGIN, TGT.DAYSOFOPERATION, TGT.ENDATE, TGT.STARTDATE) VALUES(SRC.FLIGHTNUMBER, SRC.AIRLINEID, SRC.AIRCRAFTTYPE, SRC.ID_SERVICETYPE, SRC.AIRCRAFTARRIVALTIMELT, SRC.AIRCRAFTOWNER, SRC.DESTINATION, SRC.ORIGIN, SRC.DAYSOFOPERATION, SRC.ENDATE, SRC.STARTDATE)



















